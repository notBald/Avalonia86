<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:actipro="http://schemas.actiprosoftware.com/avaloniaui"
		xmlns:conv="clr-namespace:Avalonia86.Converters"
        mc:Ignorable="d"
		xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Xaml.Behaviors.Interactivity"
        xmlns:vm="clr-namespace:Avalonia86.ViewModels"
		xmlns:view="clr-namespace:Avalonia86.Views"
        x:DataType="vm:MainModel"
        d:DesignWidth="700" d:DesignHeight="450"
        Width="700" Height="450"
        x:Class="Avalonia86.Views.frmMain"
        Icon="/Assets/86Box-gray.ico"
        Opened="Main_OnOpened" 
        Closing="Window_OnClosing"
		x:Name="MainWindow">
	<Design.DataContext>
		<vm:MainModel/>
	</Design.DataContext>
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
			<ResourceDictionary>
				<ResourceDictionary.ThemeDictionaries>
					<ResourceDictionary x:Key="Default">
						<Color x:Key="LineColor">#f0f0f0</Color>
						<Color x:Key="LineColor3">#a0a0a0</Color>
					
						<LinearGradientBrush StartPoint="50%,0%" EndPoint="50%,100%" x:Key="ToolbarBackgroundBrush">
							<GradientStop Color="#FFFFFF" Offset="0.0"/>
							<GradientStop Color="#D6D6D6" Offset="1.0"/>
						</LinearGradientBrush>

						<SolidColorBrush Color="{StaticResource LineColor3}" x:Key="VerticalGridSplitter_rect1"/>
						<SolidColorBrush Color="{StaticResource LineColor}" x:Key="VerticalGridSplitter_rect2"/>

						<SolidColorBrush Color="{StaticResource LineColor}" x:Key="StatusBarBackgroundColor" />
						<SolidColorBrush Color="White" x:Key="content_BackgroundColor" />
						<SolidColorBrush Color="#E2EAF1" x:Key="caption_btn_BackgroundColor" />
						<SolidColorBrush Color="#E5EDF4" x:Key="caption_btn_HoverColor" />
						<SolidColorBrush Color="#828790" x:Key="listVMs_BorderBrush" />
						<SolidColorBrush Color="#d9d9d9" x:Key="main_BorderBrush" />
						<SolidColorBrush Color="#d7d7d7" x:Key="statusbar_LineBrush" />
					
						<!-- The info pane has multiple borders, only part of the outer border is here -->
						<SolidColorBrush Color="{StaticResource LineColor3}" x:Key="info_Border1" />
					</ResourceDictionary>
					<ResourceDictionary x:Key="Dark">
						<Color x:Key="LineColor">#111111</Color>
						<Color x:Key="LineColor2">#828790</Color>
					
						<LinearGradientBrush StartPoint="50%,0%" EndPoint="50%,100%" x:Key="ToolbarBackgroundBrush">
							<GradientStop Color="#666666" Offset="0.0"/>
							<GradientStop Color="#222222" Offset="1.0"/>
						</LinearGradientBrush>

						<SolidColorBrush Color="#000000" x:Key="VerticalGridSplitter_rect1"/>
						<SolidColorBrush Color="#000000" x:Key="VerticalGridSplitter_rect2"/>
					
						<SolidColorBrush Color="#222222" x:Key="StatusBarBackgroundColor" />
						<SolidColorBrush Color="#222222" x:Key="content_BackgroundColor" />
						<SolidColorBrush Color="#262626" x:Key="caption_btn_BackgroundColor" />
						<SolidColorBrush Color="#333333" x:Key="caption_btn_HoverColor" />
						<SolidColorBrush Color="{StaticResource LineColor2}" x:Key="main_BorderBrush" />
						<SolidColorBrush Color="{StaticResource LineColor2}" x:Key="statusbar_LineBrush" />
					</ResourceDictionary>
				</ResourceDictionary.ThemeDictionaries>
			</ResourceDictionary>
		
			<ResourceDictionary>
				<!-- This is alternative styling for a grid splitter -->
				<!--<ControlTheme x:Key="VerticalGridSplitter" TargetType="GridSplitter">
					<Setter Property="Focusable" Value="True" />
					<Setter Property="MinWidth" Value="6" />
					<Setter Property="MinHeight" Value="6" />
					<Setter Property="PreviewContent">
						<Template>
							<Rectangle Fill="{DynamicResource SystemAccentColor}" />
						</Template>
					</Setter>
					<Setter Property="Template">
						<ControlTemplate>
							<StackPanel Orientation="Horizontal">
								<Rectangle Width="1" VerticalAlignment="Stretch" Fill="{DynamicResource VerticalGridSplitter_rect1}"></Rectangle>
								<Rectangle Width="1" VerticalAlignment="Stretch" Fill="{DynamicResource VerticalGridSplitter_rect2}"></Rectangle>
							</StackPanel>
						</ControlTemplate>
					</Setter>
				</ControlTheme>-->

				<ControlTheme x:Key="VerticalTransparentGridSplitter" TargetType="GridSplitter">
					<Setter Property="Focusable" Value="True" />
					<Setter Property="MinWidth" Value="6" />
					<Setter Property="MinHeight" Value="6" />
					<Setter Property="PreviewContent">
						<Template>
							<Rectangle Fill="{DynamicResource SystemAccentColor}" />
						</Template>
					</Setter>
					<Setter Property="Template">
						<ControlTemplate>
							<Rectangle Width="3" VerticalAlignment="Stretch" Fill="Transparent"></Rectangle>
						</ControlTemplate>
					</Setter>
				</ControlTheme>

				<conv:BitmapAssetValueConverter x:Key="variableImage"/>
				<conv:StatusToColorConverter x:Key="colorConv"/>
				<conv:HeightToIsVisibleConverter x:Key="HeightToIsVisible" />
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>
	<!--
	UI Structur
	 stackpanel Dock.Top
	   Menu
	   Toolbar
	 Grid Doc.Bottom
	   Statusbar
	 <Main Content>
	  Gid with 3 colums, middle is splitter
	   Col 1 is the list of VMs
	   Col 2 is the information / welcome page
	     DockPanel has the main content
		   Button Doc.Top is the title of the VM
		   Border with docpanel is the bottoms, showing last run time
		   <Main Content> of docpanel is a grid with 3 colums, middle is splitter
		     Right colum is system information
			 Left colum is screenshot and VM stats (also a Dockpanel)
			   Top is the buttons to change image
			   Bottom is the stats
			   <main content> is the screenshot
	
	-->
	<DockPanel>
		<StackPanel DockPanel.Dock="Top">
			<Menu Height="20">
				<Menu.Styles>
					<Style Selector="MenuItem.Head">
						<Setter Property="FontSize" Value="14"></Setter>
					</Style>
				</Menu.Styles>
				<MenuItem Classes="Head" Header="_File">
					<MenuItem Header="New Virtual Machine" Command="{Binding AddVMCmd}">
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/14 - new.png" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Delete Virtual Machine" Command="{Binding DelVMCmd}">
						<MenuItem.IsEnabled>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="VmIsSelected"/>
								<Binding Path="!SelVmRunning"/>
							</MultiBinding>
						</MenuItem.IsEnabled>
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/6 - delete.png" />
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="Exit" Command="{Binding ExitApplicationCmd}">
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/4 - close2.png" />
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
				<MenuItem Classes="Head" Header="_Machine">
					<MenuItem Name="MenuItmStart" Header="Start Machine" Command="{Binding StartVMCmd}">
						<MenuItem.IsEnabled>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="VmIsSelected"/>
								<Binding Path="!SelVmRunning"/>
								<Binding Path="!SelVmWating"/>
								<Binding Path="!SelVmPaused"/>
							</MultiBinding>
						</MenuItem.IsEnabled>
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/18 - start 32x32.png" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Stop Machine" Command="{Binding StartVMCmd}">
						<MenuItem.IsEnabled>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="VmIsSelected"/>
								<Binding Path="SelVmRunning"/>
								<Binding Path="!SelVmWating"/>
								<Binding Path="!SelVmPaused"/>
							</MultiBinding>
						</MenuItem.IsEnabled>
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/19 - stop 32x32.png" />
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="Send Ctrl-Alt-Del" Command="{Binding SoftResetVMCmd}">
						<MenuItem.IsEnabled>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="VmIsSelected"/>
								<Binding Path="SelVmRunning"/>
								<Binding Path="!SelVmWating"/>
								<Binding Path="!SelVmPaused"/>
							</MultiBinding>
						</MenuItem.IsEnabled>
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/2 - cad.png" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Reset Machine" Command="{Binding ResetVMCmd}">
						<MenuItem.IsEnabled>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="VmIsSelected"/>
								<Binding Path="SelVmRunning"/>
								<Binding Path="!SelVmWating"/>
								<Binding Path="!SelVmPaused"/>
							</MultiBinding>
						</MenuItem.IsEnabled>
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/25 - hwreset.png" />
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="Configure" Command="{Binding ConfigVMCmd}">
						<MenuItem.IsEnabled>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="VmIsSelected"/>
								<Binding Path="!SelVmWating"/>
							</MultiBinding>
						</MenuItem.IsEnabled>
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/9 - gears 32x32.png" />
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
				<MenuItem  Classes="Head" Header="_Tools">
					<MenuItem Header="Program Settings" Command="{Binding ConfigAppCmd}">
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/29 - gears2 32x32.png" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Edit VM Settings" IsEnabled="{Binding VmIsSelected}" Command="{Binding EditVMCmd}">
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/32 - tools.png" />
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="Update 86Box" Command="{Binding Update86Cmd}">
						<MenuItem.Icon>
							<Image Source="/Assets/Actions/27 - update 32x32.png" />
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
			</Menu>
			<Rectangle Fill="{DynamicResource LineColor}" Height="2"/>
			<StackPanel Orientation="Horizontal" Spacing="0" Margin="0, 2, 0, 0" Background="{DynamicResource ToolbarBackgroundBrush}">
				<StackPanel.Styles>
					<!-- Applies animations to the Background and BorderBrush properties of all buttons within this StackPanel -->
					<Style Selector=":is(Button)">
						<!-- In Avalonia, handling "Transparent" colors differs from XAML. In XAML, transparent colors are handled with special casing, but in Avalonia, we must manually account for it. 
							 That's why we have the same start and end colors. The start color might need adjustment once we finalize the color scheme. 
							 #see: https://github.com/AvaloniaUI/Avalonia/issues/15419 -->
						<Setter Property="Background" Value="#000692F0"/>
						<Setter Property="BorderBrush" Value="#000692F0"/>
						<Setter Property="BorderThickness" Value="2"/>
						<Setter Property="Width" Value="78"/>
						<Setter Property="Height" Value="52"/>
						<Setter Property="Padding" Value="0"/>

						<!-- https://stackoverflow.com/a/78910480  -->
						<!-- This selector targets the ContentPresenter of the button, ensuring the styles are applied to the button's content and border. Without this, 
							 Avalonia's default theme will override the custom styles applied here. -->
						<Style Selector="^ /template/ ContentPresenter">
							<Setter Property="Transitions">
								<Transitions>
									<BrushTransition Property="Background" Duration="0:0:0.3"/>
									<BrushTransition Property="BorderBrush" Duration="0:0:0.3"/>
								</Transitions>
							</Setter>
						</Style>

						<!-- https://docs.avaloniaui.net/docs/guides/styles-and-resources/troubleshooting#selector-with-a-pseudoclass-doesnt-override-the-default  -->
						<!-- This style targets the ContentPresenter during the pointer-over state. 
							 The #PART_ContentPresenter identifier is not strictly necessary but makes the selector more specific, giving it higher precedence 
							 over less specific ones (similar to CSS). -->
						<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
							<Setter Property="Background" Value="LightBlue"/>
							<Setter Property="BorderBrush" Value="#0692F0"/>
						</Style>

						<Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="Opacity" Value="0.7"/>
							<Setter Property="BorderBrush" Value="Transparent"/>
						</Style>

						<!-- Hides/Shows the start and stop graphics for the start button. 
						
						     Uses a scheme similar to what is reccomended in: https://docs.avaloniaui.net/docs/reference/controls/buttons/togglebutton -->
						<Style Selector="^#btnStart.stop StackPanel.start, ^#btnStart.resume StackPanel.start">
							<Setter Property="IsVisible" Value="False"/>
						</Style>
						<Style Selector="^#btnStart StackPanel.stop, ^#btnStart StackPanel.resume">
							<Setter Property="IsVisible" Value="False"/>
						</Style>
						<Style Selector="^#btnStart.stop StackPanel.stop, ^#btnStart.resume StackPanel.resume">
							<Setter Property="IsVisible" Value="True"/>
						</Style>
					</Style>
					<Style Selector="TextBlock">
						<Setter Property="Margin" Value="0, -2, 0, 0"/>
						<Setter Property="FontSize" Value="12"/>
						<Setter Property="FontFamily" Value="Tahoma"/>
						<Setter Property="TextAlignment" Value="Center"/>
					</Style>
				</StackPanel.Styles>
				<Button Name="btnStart"  Click="btnStart_Click">
					<!-- Note, uses Multibinding in backend code to set "stop" class -->
					<Button.IsEnabled>
						<MultiBinding Converter="{x:Static BoolConverters.And}">
							<Binding Path="VmIsSelected"/>
							<Binding Path="!SelVmWating"/>
						</MultiBinding>
					</Button.IsEnabled>
					<Grid>
						<!-- These are set to visible/invisible based on the class of the parent button. This class is added and removed in backend code. 
							 I experimented with using a toggle button and a custom control, but both approaches resulted in more code and style complexity.
     
							 With this method, there is some additional backend code, but considering this is the only button that will behave this way,
							 it ends up being less of a hassle. -->
						<StackPanel Classes="start">
							<Image Height="32" Width="32" Source="/Assets/Actions/18 - start 32x32.png" />
							<TextBlock Text="Start" />
						</StackPanel>
						<StackPanel Classes="stop">
							<Image Height="32" Width="32" Source="/Assets/Actions/19 - stop 32x32.png" />
							<TextBlock Text="Stop" />
						</StackPanel>
						<StackPanel Classes="resume">
							<Image Height="32" Width="32" Source="/Assets/Actions/30 - Resume 32x32.png" />
							<TextBlock Text="Resume" />
						</StackPanel>
					</Grid>
				</Button>
				<!--<Button Name="btnCtrlAltDel" Click="btnCtrlAltDel_Click">
					<Button.IsEnabled>
						<MultiBinding Converter="{x:Static BoolConverters.And}">
							<Binding Path="VmIsSelected"/>
							<Binding Path="SelVmRunning"/>
							<Binding Path="!SelVmWating"/>
							<Binding Path="!SelVmPaused"/>
						</MultiBinding>
					</Button.IsEnabled>
					<StackPanel Classes="start">
						<Image Height="32" Width="32" Source="/Assets/Actions/2 - cad 32x32.png" />
						<TextBlock Text="Soft Reset" />
					</StackPanel>
				</Button>-->
				<!--<Button Click="btnTest_Click">
					<StackPanel Classes="start">
						<Image Height="32" Width="32" Source="/Assets/Actions/2 - cad 32x32.png" />
						<TextBlock Text="Test Dialog" />
					</StackPanel>
				</Button>-->
				<Button Click="btnConfigure_Click" IsVisible="{Binding Toolbar86Btn}">
					<Button.IsEnabled>
						<MultiBinding Converter="{x:Static BoolConverters.And}">
							<Binding Path="VmIsSelected"/>
							<Binding Path="!SelVmWating"/>
						</MultiBinding>
					</Button.IsEnabled>
					<StackPanel Classes="start">
						<Image Height="32" Width="32" Source="/Assets/Actions/9 - gears 32x32.png" />
						<TextBlock Text="Settings" />
					</StackPanel>
				</Button>
				<Button Click="btnExe_Click" IsVisible="{Binding ToolbarPSBtn}">
					<StackPanel Classes="start">
						<Image Height="32" Width="32" Source="/Assets/Actions/29 - gears2 32x32.png" />
						<TextBlock Text="Exe Manager" />
					</StackPanel>
				</Button>
				<Rectangle Fill="#8a8a8a" Width="1" Margin="1,2,0,2"/>
				<Rectangle Fill="#FFFFFF" Opacity=".3" Width="1" Margin="0,2,1,2"/>
				<ComboBox SelectedIndex="{Binding CategoryIndex}" Background="transparent" Width="150" BorderThickness="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" ItemsSource="{Binding Categories}" />
			</StackPanel>
		</StackPanel>
		<Grid DockPanel.Dock="Bottom" Background="{DynamicResource StatusBarBackgroundColor}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition Width="10"><!-- Where we put the "Grip resizer" dots --></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="1"><!-- Used to create a thin border over the status bar --></RowDefinition>
				<RowDefinition Height="18"></RowDefinition>
			</Grid.RowDefinitions>
			<Rectangle Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Height="1" Fill="{DynamicResource statusbar_LineBrush}"/>
			<!--<TextBlock Grid.Column="0" Grid.Row="1" Name="lblVMCount" Margin="1, 0" Padding="3, 1, 3, 0" Text="{Binding Path=VmCount}" FontSize="10" />-->
			<TextBlock Grid.Column="0" Grid.Row="1" Margin="1, 0" Padding="3, 1, 3, 0" FontSize="10">
				All VMs: <Run Text="{Binding AllVmCount}" /> | Running: <Run Text="{Binding AllRunningVMs}" />  | Stopped: <Run Text="{Binding StoppedVMs}" />
			</TextBlock>
			<view:ctrlGrip Grid.Column="1" Grid.Row="1" Width="10" />
		</Grid>
		<Border Padding="2">
			<Grid Name="gridSplitListMain">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="200" />
					<ColumnDefinition Width="3" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Border Grid.Column="0" BorderThickness="1" BorderBrush="{DynamicResource listVMs_BorderBrush}">
					<DockPanel>
						<TextBox Watermark="Filter" Text="{Binding FilterMachines}" DockPanel.Dock="Bottom" BorderThickness="0" Name="SearchBox">
							<i:Interaction.Behaviors>
								<vm:AutoHideCaretBehavior IdleAfter = "0:0:5" />
							</i:Interaction.Behaviors>
						</TextBox>
						<ListBox BorderThickness="1" BorderBrush="{DynamicResource content_BackgroundColor}" Padding="0"
								 x:Name="lstVMs" SelectedIndex="{Binding MachineIndex}" ItemsSource="{Binding Path=Machines}" 
								 KeyDown="lstVMs_KeyDown" Background="{DynamicResource content_BackgroundColor}" DoubleTapped="lstVMs_MouseDoubleClick"
								 ScrollViewer.AllowAutoHide="False">
							<ListBox.Resources>
								<ContextMenu Name="lstVMpop" x:Key="lstVMpop" DataContext="{Binding #lstVMs.((vm:MainModel)DataContext), Mode=OneWay}">
									<MenuItem Header="Start" Click="startToolStripMenuItem_Click" IsEnabled="{Binding !SelVmWating}" IsVisible="{Binding !SelVmRunning}">
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/18 - start 32x32.png" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Stop" Click="startToolStripMenuItem_Click" IsEnabled="{Binding !SelVmWating}" IsVisible="{Binding SelVmRunning}">
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/19 - stop 32x32.png" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Configure" Click="configureToolStripMenuItem_Click" IsEnabled="{Binding !SelVmWating}">
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/9 - gears.png" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Pause" Click="pauseToolStripMenuItem_Click" IsVisible="{Binding !SelVmPaused}">
										<MenuItem.IsEnabled>
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding Path="SelVmRunning"/>
												<Binding Path="!SelVmWating"/>
											</MultiBinding>
										</MenuItem.IsEnabled>
									</MenuItem>
									<MenuItem Header="Resume" Click="pauseToolStripMenuItem_Click" IsVisible="{Binding SelVmPaused}">
										<MenuItem.IsEnabled>
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding Path="SelVmRunning"/>
												<Binding Path="!SelVmWating"/>
											</MultiBinding>
										</MenuItem.IsEnabled>
									</MenuItem>
									<MenuItem Header="Send CTRL+ALT+DEL" Click="resetCTRLALTDELETEToolStripMenuItem_Click">
										<MenuItem.IsEnabled>
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding Path="SelVmRunning"/>
												<Binding Path="!SelVmWating"/>
											</MultiBinding>
										</MenuItem.IsEnabled>
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/2 - cad 32x32.png" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Hard reset" Click="hardResetToolStripMenuItem_Click">
										<MenuItem.IsEnabled>
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding Path="SelVmRunning"/>
												<Binding Path="!SelVmWating"/>
											</MultiBinding>
										</MenuItem.IsEnabled>
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/25 - hwreset.png" />
										</MenuItem.Icon>
									</MenuItem>
									<Separator />
									<MenuItem Header="Kill" Click="killToolStripMenuItem_Click" IsEnabled="{Binding SelVmRunning}"/>
									<MenuItem Header="Wipe config" Click="wipeToolStripMenuItem_Click" IsEnabled="{Binding !SelVmRunning}"/>
									<Separator />
									<MenuItem Header="Edit" Click="editToolStripMenuItem_Click" IsEnabled="True">
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/32 - tools.png" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Clone" Click="cloneToolStripMenuItem_Click" IsEnabled="{Binding !SelVmRunning}">
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/3 - clone 32x32.png" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Remove" Click="deleteToolStripMenuItem_Click" IsEnabled="{Binding !SelVmRunning}">
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/6 - delete.png" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Open folder in Explorer" Click="openFolderToolStripMenuItem_Click" IsEnabled="True">
										<MenuItem.Icon>
											<Image Source="/Assets/Mix/file.png" />
										</MenuItem.Icon>
									</MenuItem>	
									<MenuItem Header="Open config file" Click="openConfigFileToolStripMenuItem_Click" IsEnabled="True">
										<MenuItem.Icon>
											<Image Source="/Assets/Mix/conf.png" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Create a desktop shortcut" Click="createADesktopShortcutToolStripMenuItem_Click" IsEnabled="True" IsVisible="False" />
								</ContextMenu>
							</ListBox.Resources>
							<ListBox.Styles>
								<Style Selector="ListBoxItem">
									<Setter Property="Padding" Value="0"/>

									<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
										<Setter Property="Background" Value="Transparent"/>
									</Style>

									<Style Selector="^:selected">
										<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter, ^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
											<Setter Property="Background">
												<LinearGradientBrush StartPoint="50%,0%" EndPoint="50%,100%">
													<GradientStop Color="#0D93FF" Offset="0.0"/>
													<GradientStop Color="#0078D7" Offset="1.0"/>
												</LinearGradientBrush>
											</Setter>
											<Setter Property="Foreground" Value="White"/>
										</Style>
									</Style>
								</Style>
							</ListBox.Styles>
							<ListBox.ItemTemplate>
								<!--<conv:MachineTemplateSelector CompactMachine="{Binding #lstVMs.((vm:MainModel)DataContext).CompactList, Mode=OneWay}">-->
								<conv:MachineTemplateSelector>
									<DataTemplate x:Key="FullMachineTpl" DataType="vm:VMVisual">
										<DockPanel Height="48" Background="Transparent" ContextMenu="{StaticResource lstVMpop}">
											<Panel DockPanel.Dock="Left" Width="48" Height="48">
												<Image Stretch="Uniform" StretchDirection="Both" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
														 Source="{Binding VMIcon, Mode=OneWay, Converter={StaticResource variableImage}}" Margin="6"
												   RenderOptions.BitmapInterpolationMode="MediumQuality" />
											</Panel>
											<Grid RowDefinitions="5, Auto, Auto" Height="48" >
												<TextBlock Grid.Row="1" Text="{Binding Name, Mode=OneWay}" FontWeight="Bold"  FontSize="11" Margin="0" Padding="0"/>
												<TextBlock Grid.Row="2" Text="{Binding StatusText, Mode=OneWay}" FontSize="11" Margin="0" Padding="0"/>
											</Grid>
										</DockPanel>
									</DataTemplate>
									<DataTemplate x:Key="CompactMachineTpl" DataType="vm:VMVisual">
										<Grid ColumnDefinitions="10, *" Background="Transparent" ContextMenu="{StaticResource lstVMpop}">
											<Ellipse Margin="2, 1, 0, 0" VerticalAlignment="Center" Width="8" Height="8" Fill="{Binding Status, Mode=OneWay, Converter={StaticResource colorConv}}" />
											<TextBlock Grid.Column="1" Text="{Binding Name, Mode=OneWay}" FontSize="14" Margin="3" Padding="0"/>
										</Grid>
									</DataTemplate>
								</conv:MachineTemplateSelector>
							</ListBox.ItemTemplate>
							<ListBox.ContextMenu>
								<ContextMenu>
									<MenuItem Header="New Virtual Machine" Command="{Binding AddVMCmd}">
										<MenuItem.Icon>
											<Image Source="/Assets/Actions/14 - new.png" />
										</MenuItem.Icon>
									</MenuItem>
								</ContextMenu>
							</ListBox.ContextMenu>
						</ListBox>
					</DockPanel>
				</Border>
				<GridSplitter Grid.Column="1" Background="Transparent" ResizeDirection="Columns"/>
				<Border Grid.Column="2" BorderThickness="1" BorderBrush="{DynamicResource main_BorderBrush}" Background="{DynamicResource content_BackgroundColor}" ClipToBounds="True" >
					<Grid>
						<view:ctrlWelcome IsVisible="{Binding !VmIsSelected}"></view:ctrlWelcome>
						<DockPanel IsVisible="{Binding VmIsSelected}" Margin="2">
							<!-- Caption -->
							<Button HorizontalAlignment="Stretch" Padding="20,10,10,10" Margin="0, 0, 0, 3" DockPanel.Dock="Top" CornerRadius="0" 
									Background="{DynamicResource caption_btn_BackgroundColor}" FontSize="14" FontWeight="Bold" Click="openFolderToolStripMenuItem_Click"
									Content="{Binding Machine.Name}" BorderThickness="0" >
								<Button.Styles>
									<Style Selector="Button:pointerover /template/ ContentPresenter">
										<Setter Property="Background" Value="{DynamicResource caption_btn_HoverColor}"/>
									</Style>
									<Style Selector="Button:pressed">
										<Setter Property="RenderTransform" Value="scale(0.995)" />
									</Style>
								</Button.Styles>
							</Button>
							<!-- Status -->
							<Border DockPanel.Dock="Bottom" Margin="3, 3, 3, 0" BorderBrush="#a0a0a0" BorderThickness="0, 0, 0, 0">
								<DockPanel>
									<StackPanel DockPanel.Dock="Left" Orientation="Horizontal" ToolTip.Placement="Top">
										<ToolTip.Tip>
											<StackPanel Orientation="Horizontal">
												<TextBlock>Total uptime: </TextBlock>
												<TextBlock Margin="5, 0, 0, 0" Text="{Binding Machine.Uptime.Full}" />
											</StackPanel>
										</ToolTip.Tip>
										<TextBlock Margin="12, 8, 12, 8" FontSize="12" IsVisible="{Binding !SelVmRunning}">Was last run:</TextBlock>
										<TextBlock Margin="12, 8, 12, 8" FontSize="12" IsVisible="{Binding SelVmRunning}">Was started:</TextBlock>
										<TextBlock Margin="0, 8, 0, 8" FontSize="12" FontWeight="Bold" Text="{Binding Machine.SinceRun, TargetNullValue='Never', Mode=OneWay}" />
									</StackPanel>
									<Button DockPanel.Dock="Right" Height="21" Margin="0, 0, 15, 0" CornerRadius="0" BorderThickness="1" BorderBrush="#bfbfbf" Padding="10, 0"
											VerticalAlignment="Center" VerticalContentAlignment="Stretch" Click="btnTray_Click" IsEnabled="{Binding Machine.HasPrintTray}">
										<TextBlock Margin="0, 0, 0, 0"  FontSize="12">Printer Tray</TextBlock>
									</Button>
									<Rectangle />
								</DockPanel>
							</Border>
							<Grid>
								<Grid Name="gridSplitInfoStats" IsVisible="{Binding Machine.HasValidPath}">
									<Grid.ColumnDefinitions>
										<!-- Column 1: Machine configuration -->
										<ColumnDefinition Width="*"></ColumnDefinition>
										<ColumnDefinition Width="3"></ColumnDefinition>
										<!-- Column 3: Screenshots and VM info -->
										<ColumnDefinition Width="200" MinWidth="150"></ColumnDefinition>
									</Grid.ColumnDefinitions>
									<Grid.Styles>
										<Style Selector="Button">
											<Setter Property="CornerRadius" Value="0"/>
											<Setter Property="BorderThickness" Value="1"/>
											<Setter Property="BorderBrush" Value="#bfbfbf"/>
											<Setter Property="Padding" Value="7, 0, 7, 5"/>
											<Setter Property="Height" Value="21"/>
										</Style>
									</Grid.Styles>
									<Border Margin="3, 0, 0, 0" BorderBrush="{DynamicResource info_Border1}" BorderThickness="1, 1, 0, 0">
										<view:ctrlMachineInfo DataContext="{Binding VMConfig, Mode=OneWay}" />
									</Border>
									<GridSplitter Grid.Column="1" ResizeDirection="Columns" Theme="{StaticResource VerticalTransparentGridSplitter}" Margin="3, 2, 0, 2" />
									<Border Grid.Column="2" Margin="0, 0, -3, 0" BorderBrush="{DynamicResource TabCtrlBorderBrush}" BorderThickness="1">
										<DockPanel Margin="6, 0, 6, 0">
											<DockPanel DockPanel.Dock="Top" Background="{DynamicResource content_BackgroundColor}" Height="35">
												<TextBlock DockPanel.Dock="Left" Text="Screenshots:" VerticalAlignment="Center" FontSize="12" TextDecorations="Underline" Foreground="#0066cc" Margin="0, 0, 0, 1" 
															PointerPressed="Screenshots_PointerPressed">
													<TextBlock.Styles>
														<Style Selector="TextBlock:pointerover">
															<Setter Property="Cursor" Value="Hand" />
														</Style>
													</TextBlock.Styles>
												</TextBlock>
												<StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
													<Button Margin="0, 7" IsEnabled="{Binding Machine.HasMultipleImages}" Click="btnPrevImg_Click">
														<TextBlock Margin="0, -1, 0, 1" FontSize="14">&lt;</TextBlock>
													</Button>
													<Button Margin="3, 7, 0, 7" IsEnabled="{Binding Machine.HasMultipleImages}" Click="btnNextImg_Click">
														<TextBlock Margin="0, -1, 0, 1" FontSize="14">&gt;</TextBlock>
													</Button>
												</StackPanel>
												<Rectangle Fill="Transparent" />
											</DockPanel>
											<StackPanel DockPanel.Dock="Bottom">
												<Grid ColumnDefinitions="*, *" RowDefinitions="*, *, *, *" Margin="0,0,0,2">
													<TextBlock Grid.Row="0" Grid.Column="0" Text="VM Age"/>
													<TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Machine.SinceCreated, TargetNullValue='Unknown', Mode=OneWay}" HorizontalAlignment="Right"/>
													<TextBlock Grid.Row="1" Grid.Column="0" Text="Uptime"/>
													<TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Machine.Uptime.Short, Mode=OneWay}" HorizontalAlignment="Right" ToolTip.Placement="Top">
														<ToolTip.Tip>
															<StackPanel Orientation="Horizontal">
																<TextBlock>Total uptime: </TextBlock>
																<TextBlock Margin="5, 0, 0, 0" Text="{Binding Machine.Uptime.Full, Mode=OneWay}" />
															</StackPanel>
														</ToolTip.Tip>
													</TextBlock>
													<TextBlock Grid.Row="2" Grid.Column="0" Text="Play count"/>
													<TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Machine.RunCount, Mode=OneWay}" HorizontalAlignment="Right"/>
													<TextBlock Grid.Row="3" Grid.Column="0" Text="Disk usage"/>
													<TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Machine.VMSize, TargetNullValue='Calculating...', Mode=OneWay}" HorizontalAlignment="Right"/>
												</Grid>
											</StackPanel>
											<vm:ConditionalContentPanel>
												<Border BorderBrush="#a0a0a0" BorderThickness="1, 1, 0, 0" Margin="0, 0, 0, 8">
													<Grid>
														<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="(None)" />
														<vm:AspectContentPanel>
															<Image Source="{Binding Machine.SelectedImage}" Stretch="Fill" StretchDirection="Both" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																   RenderOptions.BitmapInterpolationMode="HighQuality"/>
														</vm:AspectContentPanel>
													</Grid>
												</Border>
												<view:ctrlInformation DataContext="{Binding Machine, Mode=OneWay}" />
											</vm:ConditionalContentPanel>
										</DockPanel>
									</Border>
								</Grid>
								<StackPanel IsVisible="{Binding !Machine.HasValidPath}" HorizontalAlignment="Center" VerticalAlignment="Center">
									<TextBlock Text="Failed to find the VM's folder" HorizontalAlignment="Stretch" TextAlignment="Center"
											   FontSize="24" Foreground="DarkRed"/>
									<Button Margin="0, 25, 0, 0" HorizontalAlignment="Center" Click="btnBrowse_Click">Give me a helping hand</Button>
								</StackPanel>
							</Grid>
						</DockPanel>
					</Grid>
				</Border>
			</Grid>
		</Border>
	</DockPanel>
</Window>
